/*
 * (c) Copyright [2017] EntIT Software LLC
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/
package com.thirdparty;

import com.fortify.plugin.spi.VulnerabilityAttribute;

public enum SampleParserVulnerabilityAttribute implements VulnerabilityAttribute {

    SCAN_DATE("scanDate", AttrType.DATE),
    ENGINE_VERSION("engineVersion", AttrType.DECIMAL),
    BUILD_SERVER("buildServer", AttrType.STRING),
    ELAPSED("elapsed", AttrType.DECIMAL),
    UNIQUE_ID("uniqueId", AttrType.STRING),
    CATEGORY("category", AttrType.STRING),
    CATEGORY_ID("categoryId", AttrType.STRING),
    FILE_NAME("fileName", AttrType.STRING),
    VULNERABILITY_ABSTRACT("vulnerabilityAbstract", AttrType.LONG_STRING),
    LINE_NUMBER("lineNumber", AttrType.DECIMAL),
    CONFIDENCE("confidence", AttrType.DECIMAL),
    CRITICALITY("criticality", AttrType.STRING),
    ARTIFACT("artifact", AttrType.STRING),
    DESCRIPTION("description", AttrType.LONG_STRING),
    COMMENT("comment", AttrType.LONG_STRING),
    IMPACT("impact", AttrType.DECIMAL),
    BUILD_NUMBER("buildNumber", AttrType.STRING),
    STATUS("status", AttrType.STRING),
    LAST_CHANGE_DATE("lastChangeDate", AttrType.DATE),
    ARTIFACT_BUILD_DATE("artifactBuildDate", AttrType.DATE)
    ;

    private final AttrType type;
    private final String attributeName;

    SampleParserVulnerabilityAttribute(final String attributeName, final AttrType type) {
        this.type = type;
        this.attributeName = attributeName;
    }

    @Override
    public String attributeName() {
        return attributeName;
    }

    @Override
    public AttrType attributeType() {
        return type;
    }
}
